{"version":3,"sources":["comp/Bill.js","App.js","index.js"],"names":["Bill","props","clickhandler","setState","Customerlist","state","customerName","totalTips","tipAmt","clickhandler2","length","sum","reduce","s","v","totalCustomer","totalTipAmount","billAmt","tipPercent","tippercentage","Number","document","getElementById","value","this","innerHTML","5","10","15","20","year","Date","getFullYear","className","type","placeholder","required","onChange","evt","target","min","max","step","id","calculation","onClick","map","item","index","React","Component","App","ReactDOM","render","StrictMode"],"mappings":"8PA+LeA,E,kDA1LX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,aAAe,WACX,OAAO,EAAKC,SAAS,CACnBC,aAAa,GAAD,mBAAM,EAAKC,MAAMD,cAAjB,CAA+B,EAAKC,MAAMC,eACtDC,UAAU,GAAD,mBAAM,EAAKF,MAAME,WAAjB,CAA4B,EAAKF,MAAMG,YAjBnC,EAqBnBC,cAAgB,WAEV,GAAiC,IAA9B,EAAKJ,MAAME,UAAUG,OACtB,IAAIC,EAAM,EAAKN,MAAME,UAAUK,QAAO,SAACC,EAAGC,GACxC,OAAOD,EAAEC,UAEP,GAAmC,IAAhC,EAAKT,MAAME,UAAUG,OAC5B,OAAa,EAGjB,OAAO,EAAKP,SAAS,CAEnBY,cAAe,EAAKV,MAAMD,aAAaM,OACvCM,eAAgBL,KAhClB,EAAKN,MAAQ,CACTD,aAAc,GACda,QAAS,EACTT,OAAQ,EACRF,aAAc,GACdY,WAAY,GACZX,UAAU,GACVQ,cAAc,EACdC,eAAe,GAVJ,E,0DAwCf,IAAIG,EAAgBC,OAAOC,SAASC,eAAe,gBAAgBC,OACnEC,KAAKrB,SAAS,CACZe,WAAYC,EACZX,OAASgB,KAAKnB,MAAMY,QAAUE,EAAiB,MAKjDE,SAASC,eAAe,SAASG,UAAWN,EAAc,IAQzDE,SAASC,eAAe,YAAYG,UAPxB,CACRC,EAAG,MACHC,GAAI,WACJC,GAAI,OACJC,GAAI,aAG2CV,K,+BAM9C,IAAD,OAEHW,GAAO,IAAIC,MAAOC,cAKpB,OAIE,cADA,CACA,OAAKC,UAAU,OAAf,UACE,gDAIA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uDAGA,uBACEC,KAAK,SACLC,YAAY,oBACZC,UAAQ,EACRC,SAAU,SAACC,GACT,EAAKnC,SAAS,CACZK,OAAS8B,EAAIC,OAAOhB,MAAQ,EAAKlB,MAAMa,WAAc,IACrDD,QAASqB,EAAIC,OAAOhB,cAS5B,sBAAKU,UAAU,QAAf,UACE,yDACA,uBACEC,KAAK,QACLM,IAAI,IACJC,IAAI,KACJC,KAAK,IACLC,GAAG,eACHN,SAAU,WACR,EAAKO,oBAMX,sBAAKX,UAAU,gBAAf,UACE,uBAAOU,GAAG,WAAV,uBACA,sBAAMA,GAAG,QAAT,oBAMF,sBAAKV,UAAU,cAAf,UACE,uBACEC,KAAK,OACLC,YAAY,gBACZC,UAAQ,EACRC,SAAU,SAACC,GACT,EAAKnC,SAAS,CAAEG,aAAcgC,EAAIC,OAAOhB,WAO7C,wBAAQsB,QAAS,kBAAM,EAAK3C,gBAA5B,gCAMJ,sBAAK+B,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,SACE,iDAEF,6BACGT,KAAKnB,MAAMD,aAAa0C,KAAI,SAACC,EAAMC,GAClC,OACE,6BACGD,EACC,sBACA,EAAK1C,MAAME,UAAUyC,GACrB,UAJKA,WAWjB,sBAAKf,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQY,QAAS,kBAAM,EAAKpC,iBAA5B,+CAIF,uBAEA,sBAAKwB,UAAU,gBAAgBU,GAAG,YAAlC,UACE,qDACA,kDAGF,sBAAKV,UAAU,gBAAgBU,GAAG,SAAlC,UACE,uBAAMA,GAAG,gBAAT,UAA0BnB,KAAKnB,MAAMU,cAArC,OACA,uBAAM4B,GAAG,WAAT,cAAsBnB,KAAKnB,MAAMW,wBAGjC,qBAAKiB,UAAU,OAAf,SACF,yCAAcH,EAAd,8B,GAnLKmB,IAAMC,W,MCOVC,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCANmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,W","file":"static/js/main.8a0eda49.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// This is the varibles that i have used whose state is changing \r\n\r\nclass Bill extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Customerlist: [],\r\n            billAmt: 0,\r\n            tipAmt: 0,\r\n            customerName: \"\",\r\n            tipPercent: 20,\r\n            totalTips:[],\r\n            totalCustomer:0,\r\n            totalTipAmount:0,\r\n        };\r\n    }\r\n\r\n    clickhandler = () => {\r\n        return this.setState({\r\n          Customerlist: [...this.state.Customerlist, this.state.customerName],\r\n          totalTips: [...this.state.totalTips, this.state.tipAmt],\r\n        });\r\n\r\n    }\r\n    clickhandler2 = () => {\r\n\r\n          if(this.state.totalTips.length!==0){\r\n            var sum = this.state.totalTips.reduce((s, v) => {\r\n              return s+v;\r\n            });\r\n          }else if(this.state.totalTips.length === 0){\r\n            return sum = 0;\r\n          }\r\n\r\n        return this.setState({\r\n          \r\n          totalCustomer: this.state.Customerlist.length,\r\n          totalTipAmount: sum,\r\n        });    \r\n    }\r\n\r\n    calculation(){\r\n\r\n        var tippercentage = Number(document.getElementById(\"rangepercent\").value);\r\n        this.setState({\r\n          tipPercent: tippercentage,\r\n          tipAmt: (this.state.billAmt * tippercentage) / 100,\r\n        });\r\n        // console.log(this.state.tipPercent)\r\n        // console.log(tippercentage);\r\n\r\n        document.getElementById(\"tipid\").innerHTML= tippercentage+\"%\";\r\n           var obj = {\r\n             5: \"bad\",\r\n             10: \"Moderate\",\r\n             15: \"Good\",\r\n             20: \"Excellent\",\r\n           };\r\n\r\n        (document.getElementById(\"tipvalue\").innerHTML =obj[tippercentage]);\r\n    }\r\n\r\n    \r\n// Render method for bill class \r\n\r\n    render() {\r\n\r\n      var year = new Date().getFullYear()   //Footer year \r\n    \r\n        \r\n      // Return for the render method \r\n\r\n        return (\r\n\r\n\r\n          // Main Div \r\n          <div className=\"main\">    \r\n            <h1>Tip Calculator</h1>\r\n\r\n          {/* Section first for bill Amount, Range, Add customer element*/}\r\n\r\n            <div className=\"section1\">\r\n              <div className=\"bill\">\r\n                <label>Enter Bill Amount </label>\r\n\r\n                {/* In This bill amount input  After Onchange evt i set billamt and tipamt to value using default tipPersent instd ini val zero */}\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Bill Amount\"\r\n                  required\r\n                  onChange={(evt) => {\r\n                    this.setState({\r\n                      tipAmt: (evt.target.value * this.state.tipPercent) / 100,\r\n                      billAmt: evt.target.value,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n\r\n            {/* In this Range evt also first i calc the tipmt using tip % and then aging i setstate if tipAmt using tip percent*/}\r\n\r\n              <div className=\"range\">\r\n                <label>How Was the Service?</label>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"5\"\r\n                  max=\"20\"\r\n                  step=\"5\"\r\n                  id=\"rangepercent\"\r\n                  onChange={() => {\r\n                    this.calculation();\r\n                  }}\r\n                ></input>\r\n              </div>\r\n\r\n\r\n              <div className=\"space-between\">\r\n                <label id=\"tipvalue\">Excellent</label>\r\n                <span id=\"tipid\">20%</span>\r\n              </div>\r\n\r\n\r\n            {/* In this addcustomer input evt i set the tempvar for customerName and changed state from \"\" */}\r\n\r\n              <div className=\"addCustomer\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Customer Name\"\r\n                  required\r\n                  onChange={(evt) => {\r\n                    this.setState({ customerName: evt.target.value });\r\n                  }}\r\n                />\r\n\r\n                {/* On button click evt handler i have to display the CustomerName and tipvalue\r\n                 so i made emt arr and set state to initial state, tempvar Customername and\r\n                  for tipval arr i set to initaial spread state and calculated tipamt  */}\r\n                <button onClick={() => this.clickhandler()}>\r\n                  Add Customer\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"section2\">\r\n              <div className=\"empty\">\r\n                <h4>Customer List</h4>\r\n              </div>\r\n              <ul>\r\n                {this.state.Customerlist.map((item, index) => {\r\n                  return (\r\n                    <li key={index}>\r\n                      {item +\r\n                        \" Offering a tip of \" +\r\n                        this.state.totalTips[index] +\r\n                        \" Rupee\"}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"section3\">\r\n              <div className=\"lastButton\">\r\n                <button onClick={() => this.clickhandler2()}>\r\n                  Calculate Total Tip & Customers\r\n                </button>\r\n              </div>\r\n              <hr></hr>\r\n\r\n              <div className=\"space-between\" id=\"totalname\">\r\n                <label>Total Customers </label>\r\n                <label> Total Tip</label>\r\n              </div>\r\n\r\n              <div className=\"space-between\" id=\"values\">\r\n                <span id=\"totalCustomer\">{this.state.totalCustomer} </span>\r\n                <span id=\"totaltip\"> {this.state.totalTipAmount}</span>\r\n              </div>\r\n            </div>\r\n                <div className=\"span\">\r\n              <span>&copy; {year} Tip Calculator</span>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Bill;","import Bill from \"./comp/Bill\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bill/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}